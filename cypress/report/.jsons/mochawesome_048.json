{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-24T09:34:02.050Z",
    "end": "2022-05-24T09:34:03.055Z",
    "duration": 1005,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "86384f10-a4f8-4efd-938c-7d09dfbdb044",
      "title": "",
      "fullFile": "cypress/integration/tests/postuser.js",
      "file": "cypress/integration/tests/postuser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cfd05126-2493-4492-8d5a-565e858b9bea",
          "title": "post user request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create user test",
              "fullTitle": "post user request create user test",
              "timedOut": null,
              "duration": 779,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pattern = dataJson.pattern;\nfor (var i = 0; i < 10; i++) {\n  randomText += pattern.charAt(Math.floor(Math.random() * pattern.length));\n}\ntestEmail = randomText + dataJson.extension;\ncy.fixture(\"createuser\").then(function (payload) {\n  //1. create user (POST)\n  cy.request({\n    method: \"POST\",\n    url: Cypress.env(\"goresturl\"),\n    headers: {\n      Authorization: \"Bearer \" + accessToken\n    },\n    delay: 100,\n    body: {\n      name: payload.name,\n      gender: payload.gender,\n      email: testEmail,\n      status: payload.status\n    }\n  }).then(function (res) {\n    cy.log(JSON.stringify(res));\n    expect(res.status).to.eq(201);\n    expect(res.body).has.property(\"email\", testEmail);\n    expect(res.body).has.property(\"name\", payload.name);\n    expect(res.body).has.property(\"status\", payload.status);\n    expect(res.body).has.property(\"gender\", payload.gender);\n  }).then(function (res) {\n    var userId = res.body.id;\n    cy.log(\"user id is: \" + userId); //2. get user (GET)\n    cy.request({\n      method: \"GET\",\n      url: Cypress.env(\"goresturl\") + userId,\n      headers: {\n        Authorization: \"Bearer \" + accessToken\n      }\n    }).then(function (res) {\n      expect(res.status).to.eq(200);\n      expect(res.body).has.property(\"id\", userId);\n      expect(res.body).has.property(\"name\", payload.name);\n      expect(res.body).has.property(\"status\", payload.status);\n      expect(res.body).has.property(\"email\", testEmail);\n    });\n  });\n});",
              "err": {},
              "uuid": "45760b45-9116-4514-ad9d-62c848ca7331",
              "parentUUID": "cfd05126-2493-4492-8d5a-565e858b9bea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "45760b45-9116-4514-ad9d-62c848ca7331"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 779,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\report\\.jsons",
        "charts": true,
        "overwrite": false,
        "html": false,
        "reportPageTitle": "custom-title",
        "json": true
      },
      "version": "6.2.0"
    }
  }
}